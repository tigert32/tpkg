name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            ext: ""
            suffix: "linux-x64"
          - os: macos-latest
            ext: ""
            suffix: "macos-x64"
          - os: windows-latest
            ext: ".exe"
            suffix: "windows-x64"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      working-directory: ./tpkg
      run: |
        go mod tidy
        go build -v -o bin/tpkg-${{ matrix.suffix }}${{ matrix.ext }} ./cmd

    - name: Get current date
      id: get_date
      run: echo "CURRENT_DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Set tag name
      id: tag_name
      run: echo "TAG_NAME=v${{ env.CURRENT_DATE }}" >> $GITHUB_ENV

    - name: Create GitHub Release
      if: ${{ matrix.os == 'ubuntu-latest' }}
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Release ${{ env.TAG_NAME }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}

    - name: Upload Release Asset (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tpkg/bin/tpkg-${{ matrix.suffix }}${{ matrix.ext }}
        asset_name: tpkg-${{ matrix.suffix }}${{ matrix.ext }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.build.outputs.create_release.outputs.upload_url }}
        asset_path: ./tpkg/bin/tpkg-${{ matrix.suffix }}${{ matrix.ext }}
        asset_name: tpkg-${{ matrix.suffix }}${{ matrix.ext }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.build.outputs.create_release.outputs.upload_url }}
        asset_path: ./tpkg/bin/tpkg-${{ matrix.suffix }}${{ matrix.ext }}
        asset_name: tpkg-${{ matrix.suffix }}${{ matrix.ext }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test
      working-directory: ./tpkg
      run: |
        go test -v ./...
